{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/components/Page/Link.svelte","../src/components/Page/Navigation.svelte","../src/utils/request.js","../src/components/Post/Content.svelte","../src/components/Post/Header.svelte","../src/components/Post/Tags.svelte","../src/components/Post/UserLink.svelte","../src/components/Post/Overlay.svelte","../src/utils/pubGate.js","../src/components/Publish.svelte","../src/components/Post.svelte","../src/components/Activity.svelte","../src/utils/objectUtils.js","../src/components/Collection.svelte","../src/components/TimeLine.svelte","../src/components/Search.svelte","../src/components/Profile.svelte","../src/components/User.svelte","../src/components/Object.svelte","../src/components/Error.svelte","../node_modules/svelte/store/index.mjs","../src/store.js","../src/Router.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  export let selectTab;\n  export let curRoute;\n  export let routes;\n  export let path;\n  let url = window.location.origin + path;\n  let name = routes[path].name;\n\n  function redirectTo(event) {\n    // change current router path\n    selectTab(event.target);\n    const path = event.target.pathname;\n    curRoute.set(path);\n\n    // push the path into web browser history API\n    window.history.pushState({ path }, \"\", url);\n  }\n</script>\n\n<style>\n  a {\n    text-transform: uppercase;\n    text-decoration: underline;\n    padding: 1rem;\n  }\n</style>\n\n<li>\n  <a href={path} on:click|preventDefault={redirectTo}>{name}</a>\n</li>\n","<script>\n  import Link from \"./Link.svelte\";\n\n  export let routes;\n  export let curRoute;\n\n  export let selectTab;\n\n  export let pgi;\n  export let session;\n</script>\n\n<header id=\"navigation\">\n  <ul>\n    {#if pgi == true}\n      <Link {curRoute} {selectTab} {routes} path=\"/local\" />\n      <Link {curRoute} {selectTab} {routes} path=\"/federated\" />\n    {/if}\n    {#if $session.user}\n      <Link {curRoute} {selectTab} {routes} path=\"/inbox\" />\n      <Link {curRoute} {selectTab} {routes} path=\"/create\" />\n      <Link {curRoute} {selectTab} {routes} path=\"/search\" />\n    {/if}\n    <Link {curRoute} {selectTab} {routes} path=\"/profile\" />\n    <Link {curRoute} {selectTab} {routes} path=\"/about\" />\n  </ul>\n</header>\n","const headers = { Accept: \"application/activity+json\" };\nlet baseProtocol, baseDomain;\nconst matchUrl = base_url.match(/^([^:]+):\\/\\/([^/]+)/);\nif (matchUrl) {\n  baseProtocol = matchUrl[1];\n  baseDomain = matchUrl[2];\n} else console.log(\"matchUrl is null\", base_url);\n\n// generic request\n// TODO detect local addresses to use fetchLocal,\n// TODO otherwise use fetchProxy\nexport const fetchJSON = (url, params = { headers }, callback = d => d) => {\n  console.log(\"fetching\", url, params);\n  return fetch(url, params)\n    .then(d => d.json())\n    .catch(error => console.log(\"request failed:\", url, error))\n    .then(callback);\n};\n\nexport const xhr = (url, options = {}) => {\n  let defaultOptions = { headers };\n  return fetch(url, Object.assign(defaultOptions, options))\n    .then(d => d.json())\n    .catch(error => fetchJSON(url, error));\n};\nconst retryFetch = async (url, error) => {\n  console.log(`error fetching ${url}: ${error}. Retrying ..`);\n  return fetchProxy(url);\n};\n\nexport const fetchLocal = async (url, params = {}) => {\n  return fetchJSON(url, Object.assign({ headers }, params));\n};\n\nexport const fetchProxy = url => {\n  const params = { method: \"POST\", body: JSON.stringify({ url }) };\n  console.log(\"proxy fetch\", url, params);\n  return fetchJSON(base_url + \"/proxy\", params);\n};\n\n// Timeline, Collection\nexport const fetchCollection = function(path, session = {}, inbox = false) {\n  console.log(\"fetching collection\", path);\n  let Headers = headers;\n  if (session.user && inbox)\n    Headers[\"Authorization\"] = \"Bearer \" + session.token;\n  return fetchJSON(path, { headers: Headers });\n};\n\n// Search\nexport const fetchOutbox = async url => {\n  // TODO check cache\n  const res = await fetchProxy(url);\n  console.log(\"outbox\", res);\n  if (res.error) return res;\n  return typeof res.first === \"string\"\n    ? await fetchProxy(res.first)\n    : res.first;\n};\n\nexport const getUserId = (name, domain = baseDomain, fyn = true) => {\n  // TODO only for testing\n  console.log(\"getUserId\", domain, baseDomain, baseProtocol);\n  const protocol = domain === baseDomain ? baseProtocol : \"https\";\n\n  return (\n    `${protocol}://${domain}/` +\n    (fyn ? `@${name}` : `.well-known/webfinger?resource=acc:${name}@${domain}`)\n  );\n};\n\nexport const findUser = async (name, domain) => {\n  const useProxy = pubgate_instance ? true : false;\n  const fynRes = await fetchJSON(getUserId(name, domain));\n  //console.log(\"fyn\", fynRes);\n  if (fynRes && !fynRes.error) return fynRes;\n\n  const wfRes = await fetchJSON(getUserId(name, domain, false));\n  //console.log(\"wf\", wfRes);\n  if (!wfRes || wfRes.error) return wfRes;\n  const id = wfRes.aliases[1] || wfRes.links[0].href;\n  return fetchJSON(url);\n};\n\nexport const followUser = async (session, body) => {\n  const Headers = headers;\n  Headers[\"Authorization\"] = \"Bearer \" + session.token;\n  const req = { method: \"POST\", body, headers: Headers };\n  return fetchJSON(session.user.outbox, req);\n};\n\nexport const findPost = async url => {\n  try {\n    const response = await xhr(url);\n    const { type } = response;\n    if (type !== \"Note\") return { error: `Wrong type: ${type}` };\n    return response;\n  } catch (e) {\n    return { error: e.message };\n  }\n};\n\nexport const outboxPost = (session, body) => {\n  try {\n    const headers = { Authorization: \"Bearer \" + session.token };\n    const req = { method: \"POST\", body, headers };\n    return fetchJSON(session.user.outbox, req);\n  } catch (error) {\n    console.log(\"publish failed\", error);\n    return { error };\n  }\n};\n","<script>\n  export let post;\n</script>\n\n<style>\n  .original {\n    font-size: 0.75em;\n  }\n</style>\n\n{#if post.id}\n  <p>\n    {@html post.content}\n  </p>\n  {#if post.attachment}\n    {#each post.attachment as attachment}\n      {#if attachment.type === 'Document' && attachment.mediaType.startsWith('image')}\n        <img src={attachment.url} alt=\"image\" />\n      {/if}\n    {/each}\n  {/if}\n{:else}\n  <a class=\"original\" href={post}>Original post</a>\n{/if}\n","<script>\n  export let post;\n\n  let userId = post.hasOwnProperty(\"actor\") ? post.actor : post.attributedTo;\n  // Pleroma could send actor as list\n  if( typeof userId !== 'string' ) {\n      userId = userId[0]\n  }\n  const userName = userId.replace(/^.+\\@([^/@]+)$/, \"$1\");\n</script>\n\n<div class=\"metadata\">\n  <a href={post.id}>{post.type}</a>\n  by\n  <a href={userId}>{userName}</a>\n  <span class=\"metadata-seperator\">·</span>\n  <span>{post.published.replace('T', ' ').replace('Z', ' ')}</span>\n</div>\n","<script>\n  export let tags;\n</script>\n\n{#if tags}\n    <div class=\"tags\">\n      {#each tags as tag}\n        {#if tag.type == 'Hashtag'}\n          <a class=\"tag\" href={tag.href}>{tag.name}</a>\n        {/if}\n      {/each}\n    </div>\n{/if}","<script>\n  // import { fetchJSON } from \"../utils\";\n\n  const defaultIcon = \"favicon.png\";\n\n  const getName = id => {\n    // Will fail with user ids, which are not FollowYouNoseFormat\n    // Could be fetched on hover at same time as avatar\n\n    const name = id.match(/@([^\\/]+)$/);\n    return name ? name[1] : id;\n  };\n\n  const getAvatar = async id => {\n    // Should be performed on hover, not on page load\n\n    // const user = await fetchJSON(id);\n    // console.log(\"icon\", user.icon, defaultIcon);\n    // return user.icon.url !== \"\" ? user.icon.url : defaultIcon;\n\n    return defaultIcon\n  };\n\n  export let id;\n  const name = getName(id);\n  const avatar = getAvatar(id);\n</script>\n\n<style>\n  div {\n    float: left;\n    text-align: center;\n    background-color: #fff;\n    padding: 20px;\n  }\n  img {\n    display: block;\n    height: 50px;\n  }\n</style>\n\n<div>\n  <a href={id}>{name}</a>\n  {#await avatar then url}\n    <img src={url} alt=\"avatar\" />\n  {/await}\n</div>\n","<script>\n  import UserLink from \"./UserLink.svelte\";\n\n  export let label;\n  export let data;\n\n  let items = [];\n  let avatar;\n\n  if (data) {\n    //console.debug(\"rendering overlay\", label, data);\n    items = data.first ? data.first.orderedItems : data.orderedItems;\n  }\n</script>\n\n<style>\n  .overlay {\n    -font: 3em;\n  }\n  .reaction-tooltip {\n    display: none;\n  }\n  .overlay:hover .reaction-tooltip {\n    display: block;\n    position: absolute;\n    -top: 100px;\n    -bottom: 100px;\n    border: solid 1px black;\n  }\n</style>\n\n<div class=\"overlay\">\n  {label}\n  {#if items.length}\n    <div class=\"reaction-tooltip\">\n      {#each items as item}\n        <UserLink id={item.actor} />\n      {/each}\n    </div>\n  {/if}\n</div>\n","export const getHashTag = name => ({ name, href: \"\", type: \"Hashtag\" });\n\nexport const getMention = (name, href) => ({ name, href, type: \"Mention\" });\n\nexport const getCreateObject = (content, tag) => ({\n  type: \"Create\",\n  object: {\n    type: \"Note\",\n    attachment: [],\n    tag,\n    content,\n  },\n});\n","<script>\n  import { getCreateObject, getHashTag, getMention } from \"../utils/pubGate\";\n  import { getUserId, outboxPost } from \"../utils\";\n\n  export let reply = null;\n  export let session;\n  export let curRoute;\n\n  let inProgress = false;\n  let content = \"\";\n  let error = \"\";\n\n  const hashTagMatcher = /(^|\\W)(#[^#\\s]+)/gi;\n  const mentionMatcher = /(^|\\W)@([^@\\s]+)(@([^@\\s]+))?/gi;\n\n  const wrapHashTagsWithLink = text =>\n    text.replace(hashTagMatcher, '$1<a href=\"\" rel=\"tag\">$2</a>');\n\n  const getAllHashTags = text => text.match(hashTagMatcher) || [];\n  const getAllMentions = text => [...text.matchAll(mentionMatcher)] || [];\n\n  const wrapLinksWithTags = text =>\n    text.replace(/( https?:\\/\\/([^\\s]+))/gi, '<a href=\"$1\">$2</a>');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    inProgress = true;\n\n    const tags = getAllHashTags(content)\n      .map(v => v.trim())\n      .map(getHashTag);\n    content = wrapHashTagsWithLink(wrapLinksWithTags(content));\n\n    // parse and replace mentions\n    const mentions = getAllMentions(content).map(m => {\n      const orig = m[0];\n      const name = m[2];\n      const domain = m[4];\n      const id = getUserId(name, domain);\n      const wrapped = `${m[1]}<span class='h-card'><a href=\"${id}\"' class='u-url mention'>@<span>${name}</span></a></span>`;\n      content = content.replace(orig, wrapped);\n      return getMention(name, id);\n    });\n    let ap_object = getCreateObject(content, tags.concat(mentions));\n    ap_object.cc = mentions.map(m => m.href);\n\n    if (reply) {\n      ap_object.object.inReplyTo = reply.id;\n      if (reply.attributedTo !== $session.user.url) {\n        ap_object.cc = ap_object.cc.concat(reply.attributedTo);\n      }\n    }\n    const body = JSON.stringify(ap_object);\n    const res = await outboxPost($session, body);\n    if (res.error) error = res.error;\n    else if (res.Created !== \"success\")\n      error = \"Failed to create post: \" + JSON.stringify(res);\n    else {\n      // TODO change route to show post?\n      content = \"\";\n    }\n    inProgress = false;\n  };\n</script>\n\n<style>\n  textarea {\n    width: 100%;\n  }\n</style>\n\n<form on:submit={handleSubmit}>\n\n  <fieldset class=\"form-group\">\n    <textarea\n      class=\"form-control\"\n      placeholder=\"Write your text here\"\n      bind:value={content} />\n  </fieldset>\n\n  <button\n    class=\"btn btn-sm pull-xs-right btn-info\"\n    disabled={!content || inProgress}>\n    Publish\n  </button>\n\n</form>\n\n<p class=\"text-danger\">{error}</p>\n","<script>\n  export let post, session, showComments;\n\n  import PostContent from \"./Post/Content.svelte\";\n  import Header from \"./Post/Header.svelte\";\n  import Tags from \"./Post/Tags.svelte\";\n  import Overlay from \"./Post/Overlay.svelte\";\n  import Collection from \"./Collection.svelte\";\n  import Publish from \"./Publish.svelte\";\n\n  import { fetchJSON, outboxPost } from \"../utils\";\n\n  let pgi = pubgate_instance;\n  let showPublish = false;\n  let content = \"replies\";\n\n  let inReply;\n  let isReply = false;\n\n  let isID = typeof post === \"string\";\n  // let skip_comments;\n  // if (!isID && post.type.startsWith(\"To\")) skip_comments = true;\n  let tags = post.tag;\n\n  const togglePublish = ev => {\n    ev.preventDefault();\n    showPublish = !showPublish;\n  };\n  const toggleShowComments = ev => {\n    ev.preventDefault();\n    showComments = !showComments;\n  };\n\n  const getReactions = async item => {\n    if (!item) return \"n/a\";\n    const data = typeof item === \"string\" && !pgi ? await fetchJSON(item) : item;\n    // TODO only fetch on hover?\n    // Should be in cache with backend caching. With FE-caching, IDK\n\n    // TODO mastodon returns first as string: totalItems is higher level than first\n    // Not critical with BE caching\n    if (typeof data.first === \"string\") console.log(\"first is string\", data);\n\n    return data;\n  };\n\n  let likes = getReactions(post.likes);\n  let comments = getReactions(post.replies);\n  let announces = getReactions(post.shares);\n\n  let liked;\n  let announced;\n  if ($session.user && post.reactions) {\n    if (post.reactions.Like) {\n      if (post.reactions.Like[$session.user.name]) liked = true;\n    } else if (post.reactions.Announce) {\n      if (post.reactions.Announce[$session.user.name]) announced = true;\n    }\n  }\n\n  const headers = { Authorization: \"Bearer \" + $session.token };\n\n  // TODO is it possible to pass type (Like or Announce) and catch event to combine functions?\n  // Yes\n  const doLike = async ev => {\n    ev.preventDefault();\n    if (liked) return;\n    const object = post.id;\n    const cc = [post.attributedTo];\n    const body = JSON.stringify({ type: \"Like\", object, cc });\n    const res = await outboxPost($session, body);\n    liked = true;\n  };\n\n  const doAnnounce = async ev => {\n    ev.preventDefault();\n    if (announced) return;\n    const object = post.id;\n    const cc = [post.attributedTo];\n    const body = JSON.stringify({ type: \"Announce\", object, cc });\n    const res = await outboxPost($session, body);\n    announced = true;\n  };\n</script>\n\n<style>\n  .rs {\n    border-bottom: 1px solid #dadde1;\n    display: flex;\n  }\n  .ra {\n    padding: 4px 0;\n    display: flex;\n  }\n\n  .rs_left {\n    flex-grow: 1;\n  }\n  .rs_right {\n    margin-left: 7px;\n  }\n  .ra_item {\n    flex: 1 0;\n    align-items: center;\n    color: #606770;\n    display: flex;\n    font-weight: 600;\n    height: 32px;\n    justify-content: center;\n  }\n  button {\n    border: none;\n    background: none;\n  }\n  .comments {\n    padding-left: 15px;\n    border-left: 3px solid #ff0;\n  }\n</style>\n\n{#if isID}\n  <a href={post}>{post}</a>\n{:else}\n  <Header {post} />\n  <Tags {tags} />\n  <PostContent {post} />\n  <div>\n    <div class=\"rs\">\n      {#await likes then likes}\n        <span class=\"rs_left\">\n          <Overlay label={`${likes.totalItems} likes`} data={likes.first} />\n        </span>\n      {/await}\n      {#await comments then comments}\n        <span class=\"rs_right\" on:click={toggleShowComments}>\n          {comments.totalItems} comments\n        </span>\n      {/await}\n      {#await announces then announces}\n        <span class=\"rs_right\">\n          <Overlay\n            label={`${announces.totalItems} announces`}\n            data={announces.first} />\n        </span>\n      {/await}\n    </div>\n    {#if $session.user}\n      <div class=\"ra\">\n        <button class=\"btn btn-dark ra_item\" on:click={doLike}>\n          Like\n          {#if liked}d{/if}\n        </button>\n        <button class=\"btn btn-dark ra_item\" on:click={togglePublish}>\n          Add comment\n        </button>\n        <button class=\"btn btn-dark ra_item\" on:click={doAnnounce}>\n          Announce\n          {#if announced}d{/if}\n        </button>\n      </div>\n      {#if showPublish}\n        <Publish reply={post} {session} />\n      {/if}\n    {/if}\n    {#if showComments}\n      {#await comments then collection}\n        {#if collection.totalItems}\n          <div class=\"comments\">\n            <Collection {collection} {session} {content} />\n          </div>\n        {/if}\n      {/await}\n    {/if}\n  </div>\n{/if}\n","<script>\n  import Post from \"./Post.svelte\";\n  import Header from \"./Post/Header.svelte\";\n  import { ensureObject } from \"../utils\";\n\n  export let post, session, content;\n\n  let pgi = pubgate_instance;\n  let postObject, isReply, isReaction;\n\n  if (content == \"replies\") {\n    post.object.type = \"Reply\";\n  } else if (\n    [\"Announce\", \"Like\"].includes(post.type) ||\n    post.object.inReplyTo\n  ) {\n    postObject = pgi ? post.object : ensureObject(post.object);\n\n    if ([\"Announce\", \"Like\"].includes(post.type)) {\n      isReaction = true;\n    } else if (postObject.inReplyTo) {\n      isReply = true;\n      postObject.type = \"Reply\";\n      if (typeof postObject.inReplyTo !== \"string\") {\n        postObject.inReplyTo.type = \"To \" + postObject.inReplyTo.type;\n      }\n    }\n  }\n  let showComments = true;\n  let notShowComments = false\n</script>\n\n<style>\n  .reaction {\n    margin-left: 30px;\n  }\n</style>\n\n<li class=\"post\">\n  {#if content == 'replies'}\n    <div class=\"reaction\">\n      <Post post={post.object} {session} showComments={showComments} />\n    </div>\n  {:else}\n    <h2 id=\"\">.</h2>\n    {#if isReaction}\n      <Header {post} />\n      <div class=\"reaction\">\n        <Post post={postObject} {session} showComments={notShowComments} />\n      </div>\n    {:else if isReply}\n      <Post post={postObject} {session} showComments={notShowComments} />\n      <div class=\"reaction\">\n        <Post post={postObject.inReplyTo} {session} showComments={notShowComments} />\n      </div>\n    {:else}\n      <Post post={post.object} {session} showComments={showComments} />\n    {/if}\n  {/if}\n</li>\n","import { xhr } from \"./request\";\n\nexport function ensureObject(value) {\n  if (typeof value === \"string\") {\n    let fpost;\n    fpost = xhr(value);\n    return fpost => fpost.object;\n  } else {\n    return value;\n  }\n}\n","<script>\n  import { fetchCollection } from \"../utils\";\n  import Activity from \"./Activity.svelte\";\n  import Post from \"./Post.svelte\";\n  import Header from \"./Post/Header.svelte\";\n  export let collection, session, content;\n\n  let pgi = pubgate_instance;\n\n  // pagination\n  let homeUrl, prevUrl, nextUrl, page;\n\n  const selectPage = async query => {\n    let args = query.split(\"?\");\n    let url = args.shift(); // pull out first argument\n    if (pgi) args.push(\"cached=1\");\n    collection = await fetchCollection(`${url}?${args.join(\"&\")}`, $session);\n  };\n\n  const updatePageLinks = d => {\n    let pageMatch = /page=(\\d+)$/.exec(d.id);\n    page = pageMatch ? parseInt(pageMatch[1]) : 1;\n    homeUrl = page > 1 && d.partOf ? d.partOf : null;\n    prevUrl = page > 1 ? `${homeUrl}?page=${page - 1}` : null;\n    nextUrl = d.next;\n    if (d.first && d.totalItems === d.first.totalItems) nextUrl = null;\n    return d.first ? d.first.orderedItems : d.orderedItems;\n  };\n\n  $: posts = updatePageLinks(collection);\n\n\n</script>\n\n<ul class=\"post-list\">\n  {#each posts as post}\n        <Activity {post} {session} {content}/>\n  {/each}\n</ul>\n\n{#if homeUrl || prevUrl || nextUrl}\n  <div class=\"navigation\">\n    {#if homeUrl}\n      <span on:click={() => selectPage(homeUrl)}>First</span>\n    {/if}\n    {#if prevUrl}\n      <span on:click={() => selectPage(prevUrl)}>Previous</span>\n    {/if}\n    {#if page}\n      <b>{page}</b>\n    {/if}\n    {#if nextUrl}\n      <span on:click={() => selectPage(nextUrl)}>Next</span>\n    {/if}\n  </div>\n{/if}\n","<script>\n  export let curRoute;\n  export let session;\n\n  import { fetchCollection } from \"../utils\";\n  import Collection from \"./Collection.svelte\";\n\n  let pgi = pubgate_instance;\n  let content = \"timeline\";\n\n  const getTimeline = function(tab, session) {\n    switch (tab) {\n      case \"/local\":\n        return pgi\n          ? fetchCollection(base_url + \"/timeline/local?cached=1\")\n          : [];\n      case \"/federated\":\n        return pgi\n          ? fetchCollection(base_url + \"/timeline/federated?cached=1\")\n          : [];\n      case \"/inbox\":\n        if (!session.user) return [];\n        return pgi\n          ? fetchCollection(session.user.inbox + \"?cached=1\", session, true)\n          : fetchCollection(session.user.inbox, session);\n      case \"/profile\":\n        return pgi\n          ? fetchCollection(session.user.outbox + \"?cached=1\")\n          : fetchCollection(session.user.outbox);\n      default:\n        return [];\n    }\n  };\n\n  $: timeline = getTimeline($curRoute, $session);\n</script>\n\n<style>\n  .navigation {\n  }\n</style>\n\n{#await timeline then collection}\n  <Collection {collection} {session} {content}/>\n{/await}\n","<script>\n  export let session;\n  export let curRoute;\n\n  import { findUser, fetchOutbox, findPost, followUser } from \"../utils\";\n  import Collection from \"./Collection.svelte\";\n  import Post from \"./Post.svelte\";\n\n  // search user\n  let username = \"\";\n  let profile = null;\n  let following = false;\n  let outbox_collection = null;\n\n  // search post\n  let loadedPost = \"\";\n  let postLink = \"\";\n  let errorUser = \"\";\n  let errorPost = \"\";\n  let errorFollow = \"\";\n\n  const handleSearchUser = async event => {\n    errorUser = \"\";\n    profile = null;\n    outbox_collection = null;\n    let name, domain, url;\n\n    const pair = username.split(\"@\");\n    if (username.match(/^http/) || pair.length !== 2 || pair[0] === \"\") {\n      return (errorUser = \"Use this format: username@domain\");\n    }\n    name = pair[0];\n    domain = pair[1];\n\n    const result = await findUser(name, domain);\n    if (!result) errorUser = \"Empty response.\";\n    else if (result.error) errorUser = result.error;\n    if (!result.outbox) {\n      errorUser = result.error || \"User not found.\";\n      return;\n    }\n    profile = result;\n    errorFollow = \"\";\n\n    outbox_collection =\n      typeof profile.outbox === \"string\"\n        ? await fetchOutbox(profile.outbox)\n        : profile.outbox;\n  };\n\n  const handleSearchPost = async event => {\n    if (postLink === \"\" || !postLink.match(\"^http\")) {\n      errorPost = \"Not an URL.\";\n      return;\n    }\n    errorPost = loadedPost = \"\";\n    const result = await findPost(postLink);\n    if (!result) errorPost = \"Empty response.\";\n    else if (result.error) {\n      errorPost = result.error;\n      return;\n    }\n    loadedPost = result;\n    postLink = \"\";\n  };\n\n  const handleFollow = async event => {\n    if (!$session.user) {\n      errorFollow = \"You are not logged in.\";\n      return;\n    }\n\n    const type = event.target.innerText;\n    const { id, name } = profile;\n    const body = JSON.stringify({ type, object: id });\n\n    const res = await followUser($session, body);\n    if (!res) errorFollow = `Empty response trying to ${type} ${name}`;\n    else if (res.Created === \"success\")\n      following = type === \"Follow\" ? true : false;\n    else if (res.error)\n      if (res.error === \"This user is already followed\") following = true;\n      else errorFollow = JSON.stringify(res.error);\n    else errorFollow = \"Something went wrong.\";\n  };\n</script>\n\n<style>\n  .error {\n    margin-left: 10px;\n    font-size: 15px;\n  }\n</style>\n\n<br />\nSearch accounts\n<form on:submit|preventDefault={handleSearchUser}>\n  <fieldset class=\"form-group\">\n    <input\n      class=\"form-control form-control-lg\"\n      type=\"text\"\n      placeholder=\"Format: username@domain\"\n      bind:value={username} />\n  </fieldset>\n  <button\n    class=\"btn btn-sm pull-xs-right btn-info\"\n    type=\"submit\"\n    disabled={!username}>\n    Find User\n  </button>\n  <span class=\"error text-danger\">{errorUser}</span>\n</form>\n<br />\n<br />\nLoad Post by link\n<form on:submit|preventDefault={handleSearchPost}>\n  <fieldset class=\"form-group\">\n    <input\n      class=\"form-control form-control-lg\"\n      type=\"text\"\n      placeholder=\"Enter a link here\"\n      bind:value={postLink} />\n  </fieldset>\n  <button\n    class=\"btn btn-sm pull-xs-right btn-info\"\n    type=\"submit\"\n    disabled={!postLink}>\n    Find Post\n  </button>\n  <span class=\"error text-danger\">{errorPost}</span>\n</form>\n<br />\n<br />\n\n{#if profile}\n  <h2>\n    {profile.name}\n    <button class=\"btn btn-sm pull-xs-right btn-info\" on:click={handleFollow}>\n      {#if following}Unfollow{:else}Follow{/if}\n    </button>\n    <span class=\"error text-danger\">{errorFollow}</span>\n  </h2>\n  {profile.summary}\n  {#if outbox_collection}\n    <Collection {session} collection={outbox_collection} />\n  {/if}\n{/if}\n\n{#if typeof loadedPost === 'object'}\n  <Post post={loadedPost} {session} />\n{/if}\n","<script>\n  import TimeLine from \"./TimeLine.svelte\";\n\n  import { fetchLocal } from \"../utils\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let curRoute;\n  export let session;\n\n  let username = \"\";\n  let password = \"\";\n  let summary = \"\";\n  let avatar = \"\";\n  let invite = \"\";\n  let errorLogin = \"\";\n  let errorRegister = \"\";\n\n  const login = async event => {\n    errorLogin = \"\";\n    console.log(\"loggin in\");\n    const profile = await fetchLocal(base_url + \"/@\" + username).catch(error =>\n      console.log(\"login failed\", error)\n    );\n    if (!profile) {\n      errorLogin = \"login failed\";\n      return;\n    }\n    if (profile.error) {\n      errorLogin = profile.error;\n      return;\n    }\n    console.log(\"login result\", profile);\n    if (!profile.endpoints) {\n      console.log(\"BUG profile.endpoints doesn't exist.\");\n      return;\n    }\n    console.log(\"fetching token\", profile.endpoints.oauthTokenEndpoint);\n    const tokenUrl = profile.endpoints.oauthTokenEndpoint;\n    const body = JSON.stringify({ username, password });\n    const token = await fetchLocal(tokenUrl, { method: \"POST\", body });\n\n    let temp = $session;\n    if (token.access_token) {\n      let newSession = $session;\n      newSession.user = profile;\n      newSession.token = token.access_token;\n      dispatch(\"updatesession\", newSession);\n    } else console.log(\"token result\", token);\n  };\n\n  const logout = async event => dispatch(\"updatesession\", {});\n  const register = async event => {\n    const icon = { type: \"Image\", mediaType: \"image/jpeg\", url: avatar };\n    const profile = { type: \"Person\", name: username, summary, icon };\n    const body = JSON.stringify({ username, password, invite, profile });\n    const user = await fetchLocal(base_url + \"/user\", { method: \"POST\", body });\n\n    if (user.profile) await login({});\n    else if (user.error) errorRegister = user.error;\n    else console.log(\"register failed:\", user);\n  };\n</script>\n\n{#if $session.user}\n  <h2>\n    <a href={$session.user.url}>{$session.user.name}</a>\n    <button class=\"btn btn-sm pull-xs-right btn-info\" on:click={logout}>\n      Logout\n    </button>\n  </h2>\n  {$session.user.summary}\n  <TimeLine {curRoute} {session} />\n{:else}\n  <div class=\"form-group\">\n    Sign-in ( ActivityPub compatible, OAuth2 password grant )\n  </div>\n\n  <form on:submit|preventDefault={login}>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"username\"\n        placeholder=\"Username\"\n        bind:value={username} />\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"password\"\n        placeholder=\"Password\"\n        bind:value={password} />\n    </fieldset>\n    <button\n      class=\"btn btn-sm pull-xs-right btn-info\"\n      type=\"submit\"\n      disabled={!username || !password}>\n      Sign in\n    </button>\n    <span class=\"text-danger\">{errorLogin}</span>\n  </form>\n  <br />\n  <br />\n  or register ( PubGate only )\n  <br />\n  <form on:submit|preventDefault={register}>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"text\"\n        placeholder=\"Username\"\n        bind:value={username} />\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"password\"\n        placeholder=\"Password\"\n        bind:value={password} />\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        rows=\"8\"\n        placeholder=\"Profile Description\"\n        bind:value={summary} />\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"text\"\n        placeholder=\"Avatar URL\"\n        bind:value={avatar} />\n    </fieldset>\n    <fieldset class=\"form-group\">\n      <input\n        class=\"form-control form-control-lg\"\n        type=\"text\"\n        placeholder=\"Invite code\"\n        bind:value={invite} />\n    </fieldset>\n\n    <button\n      class=\"btn btn-sm pull-xs-right btn-info\"\n      type=\"submit\"\n      disabled={!username || !password}>\n      Register\n    </button>\n    <span class=\"text-danger\">{errorRegister}</span>\n  </form>\n{/if}\n","<script>\n  import { fetchJSON } from \"../utils\";\n\n  import Collection from \"./Collection.svelte\";\n\n  export let curRoute;\n  export let session;\n\n  const username = $curRoute.match(/^\\/@([^\\/]+)$/)[1];\n\n  let outbox, followers, following, liked;\n\n  const updateUser = async url => {\n    const d = await fetchJSON(url);\n    console.log(\"[User] Fetching timeline\", d.outbox);\n    outbox = fetchJSON(d.outbox);\n    followers = fetchJSON(d.followers);\n    following = fetchJSON(d.following);\n    liked = fetchJSON(d.liked);\n    return d;\n  };\n\n  $: profile = updateUser(base_url + $curRoute);\n</script>\n\n{#await profile}\n  Shortly this page will show info about\n  <b>{username}</b>\n{:then user}\n  <h2>\n    <a href={user.url}>{user.name}</a>\n  </h2>\n  <p>\n    <a href={user.followers}>Followers</a>\n    |\n    <a href={user.following}>Following</a>\n    |\n    <a href={user.outbox}>Timeline</a>\n    |\n    <a href={user.liked}>Liked</a>\n  </p>\n\n  <p>{user.summary}</p>\n\n  {#await followers then collection}\n    {#if collection.length}\n      <h3>Followers</h3>\n      <Collection {session} {collection} />\n    {/if}\n  {/await}\n\n  {#await following then collection}\n    {#if collection.length}\n      <h3>Following</h3>\n      <Collection {session} {collection} />\n    {/if}\n  {/await}\n\n  {#await liked then collection}\n    {#if collection.length}\n      <h3>Liked</h3>\n      <Collection {session} {collection} />\n    {/if}\n  {/await}\n\n  {#await outbox then collection}\n    <h3>Posts</h3>\n    <Collection {session} {collection} />\n  {/await}\n{/await}\n","<script>\n  import Post from \"./Post.svelte\";\n\n  import { fetchLocal } from \"../utils\";\n\n  export let curRoute;\n  export let session;\n  let pgi = pubgate_instance;\n  let id = $curRoute.match(/^\\/@([^\\/]+)\\/object\\/(.+)$/)[2];\n  let route = pgi ? $curRoute + \"?cached=1\" : $curRoute;\n  let showComments = true\n\n  $: object = fetchLocal(base_url + route);\n</script>\n\n{#await object}\n  So you want to see object {id}?\n{:then post}\n  <Post {post} {session} {showComments} />\n{/await}\n","<script>\n  export let curRoute;\n  export let session;\n</script>\n\nYou wanted to see {$curRoute} but we don't have it :/\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {\n  TimeLine,\n  Publish,\n  Search,\n  Profile,\n  About,\n  User,\n  Object,\n  Error,\n} from \"./components\";\nimport { writable } from \"svelte/store\";\n\nconst curRoute = writable(window.location.pathname);\n\nconst routes = {\n  \"/local\": { name: \"Local Timeline\", component: TimeLine },\n  \"/federated\": { name: \"Federated Timeline\", component: TimeLine },\n  \"/create\": { name: \"Create\", component: Publish },\n  \"/search\": { name: \"Search\", component: Search },\n  \"/inbox\": { name: \"Inbox\", component: TimeLine },\n  \"/profile\": { name: \"Profile\", component: Profile },\n  \"/about\": { name: \"About\", component: About },\n  user: { component: User },\n  object: { component: Object },\n  error: { component: Error },\n};\n\nconst session = writable({});\n\nexport { curRoute, routes, session };\n","<script>\n  import { onDestroy } from \"svelte\";\n\n  export let routes;\n  export let curRoute;\n  if ($curRoute === \"/\") curRoute.set(\"/local\");\n\n  export let updateSession;\n  export let session;\n\n  let component;\n\n  const unsubscribe = curRoute.subscribe(value => {\n    const page = routes[$curRoute];\n    let objectMatch = $curRoute.match(/^\\/@([^\\/]+)\\/object\\/(.+)$/);\n    let userMatch = $curRoute.match(/^\\/@([^\\/]+)\\/?$/);\n    if (page) component = page.component;\n    else if (objectMatch) component = routes.object.component;\n    else if (userMatch) component = routes.user.component;\n    if (!component) component = routes.error.component;\n  });\n  onDestroy(unsubscribe);\n</script>\n\n<style>\n\n</style>\n\n<div class=\"content\">\n  <svelte:component\n    this={component}\n    {curRoute}\n    {session}\n    on:updatesession={updateSession} />\n</div>\n","<script>\n  import { session, routes, curRoute } from \"./store\";\n  import { Navigation, Footer } from \"./components\";\n  import Router from \"./Router.svelte\";\n\n  let pgi = pubgate_instance;\n\n  function selectTab(target) {\n    const path = target.pathname;\n    Array.prototype.forEach.call(\n      target.parentNode.parentNode.children,\n      (el, i) => {\n        if (el.firstChild.href.split(\"/\")[1] !== path) {\n          el.firstChild.classList.remove(\"header-selected\");\n        }\n      }\n    );\n    target.classList.add(\"header-selected\");\n  }\n\n  const updateSession = e => {\n    session.set(e.detail);\n    saveToStore(\"session\", $session);\n  };\n  const saveToStore = (key, value) => {\n    //console.log(\"saving\", key, value);\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n  const loadFromStore = key => {\n    //console.log(\"loading\", key);\n    return JSON.parse(localStorage.getItem(key));\n  };\n\n  session.set(loadFromStore(\"session\") || {});\n</script>\n\n<style>\n\n</style>\n\n<Navigation {routes} {curRoute} {selectTab} {session} {pgi} />\n<Router {routes} {curRoute} {session} {updateSession} />\n<Footer />\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: { name: \"app\" },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","onDestroy","Error","get_current_component","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","key","resolved","[object Object]","child_ctx","current","blocks","m","mount","then","error","catch","pending","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","$destroy","indexOf","splice","path","redirectTo","selectTab","curRoute","routes","url","window","location","origin","pathname","set","history","pushState","pgi","$session","user","session","headers","Accept","baseProtocol","baseDomain","matchUrl","base_url","match","console","log","fetchJSON","params","fetch","json","xhr","defaultOptions","fetchLocal","async","fetchProxy","method","body","JSON","stringify","fetchCollection","inbox","Headers","fetchOutbox","res","first","getUserId","domain","fyn","findUser","fynRes","wfRes","aliases","links","href","followUser","req","outbox","findPost","response","message","outboxPost","Authorization","post","content","attachment","mediaType","startsWith","id","published","replace","userName","userId","hasOwnProperty","actor","attributedTo","tags","tag","avatar","defaultIcon","getName","getAvatar","items","item","label","orderedItems","getHashTag","getMention","getCreateObject","object","inProgress","handleSubmit","hashTagMatcher","mentionMatcher","reply","getAllHashTags","v","trim","wrapHashTagsWithLink","wrapLinksWithTags","mentions","matchAll","getAllMentions","orig","wrapped","ap_object","concat","cc","inReplyTo","Created","likes","comments","announces","showComments","totalItems","toggleShowComments","doLike","togglePublish","doAnnounce","liked","announced","showPublish","collection","isID","pubgate_instance","getReactions","replies","shares","reactions","Like","Announce","ev","isReaction","isReply","postObject","notShowComments","includes","fpost","ensureObject","homeUrl","prevUrl","page","nextUrl","posts","selectPage","args","query","split","join","pageMatch","exec","parseInt","partOf","next","updatePageLinks","timeline","tab","getTimeline","$curRoute","profile","summary","following","errorFollow","handleFollow","outbox_collection","loadedPost","errorUser","errorPost","username","postLink","handleSearchUser","handleSearchPost","pair","result","innerText","errorLogin","errorRegister","password","login","register","invite","logout","dispatch","endpoints","oauthTokenEndpoint","tokenUrl","access_token","newSession","icon","followers","updateUser","route","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","/local","TimeLine","/federated","/create","Publish","/search","/inbox","/profile","/about","updateSession","objectMatch","userMatch","prototype","children","el","firstChild","classList","remove","saveToStore","localStorage","setItem","parse","getItem","loadFromStore"],"mappings":"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"}